<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.bicyclesharing.dao.BicycleDao">
    <!--1.插入一辆单车-->
    <insert id="insertBicycle" parameterType="Bicycle">
        INSERT INTO bicycle (bicycle_id, bicycle_current_x, bicycle_current_y, bicycle_last_time, bicycle_statement)
        VALUES (#{bicycleId}, #{bicycleCurrentX}, #{bicycleCurrentY}, #{bicycleLastTime}, #{bicycleStatement})
    </insert>
    <!--2.按id删除一辆单车-->
    <delete id="deleteBicycle" parameterType="Integer">
        DELETE FROM bicycle
        WHERE bicycle_id = #{bicycleId}
    </delete>
    <!--3.修改单车实例-->
    <update id="updateBicycle" parameterType="Bicycle">
        UPDATE bicycle
        SET bicycle_current_x = #{bicycleCurrentX}, bicycle_current_y = #{bicycleCurrentY},
            bicycle_last_time = #{bicycleLastTime}, bicycle_statement = #{bicycleStatement}
        WHERE bicycle_id = #{bicycleId}
    </update>
    <!--4.查询所有单车-->
    <select id="selectAllBicycle" resultType="Bicycle">
        SELECT *
        FROM bicycle
    </select>
    <!--5.根据id查询单车-->
    <select id="selectBicycleById" parameterType="Integer" resultType="Bicycle">
        SELECT *
        FROM bicycle
        WHERE bicycle_id = #{bicycleId}
    </select>
    <!--6.计算单车数量-->
    <select id="selectBicycleCount" resultType="Integer">
        SELECT count(bicycle_id)
        FROM bicycle
    </select>
    <!--7.根据位置信息查询附近单车-->
    <select id="selectBicycleByLocation" resultType="Bicycle">
        SELECT *
        FROM bicycle
        WHERE bicycle_current_x > #{bicycleCurrentX} - 0.01 AND bicycle_current_x<![CDATA[ <]]> #{bicycleCurrentX} + 0.01
              AND bicycle_current_y > #{bicycleCurrentY} - 0.01 AND bicycle_current_y<![CDATA[ <]]> #{bicycleCurrentY} + 0.01
    </select>
    <!--8.根据车辆状况查询单车-->
    <select id="selectBicycleByStatement" resultType="Bicycle" parameterType="Integer">
        SELECT *
        FROM bicycle
        WHERE bicycle_statement = #{bicycleStatement}
        ORDER BY bicycle_id
        <!--这里主要为了后面x与y的匹对-->
    </select>
    <!--8.根据车辆状况查询单车-->
    <select id="selectBicycleCountByStatement" resultType="Integer" parameterType="Integer">
        SELECT count(*)
        FROM bicycle
        WHERE bicycle_statement = #{bicycleStatement}
    </select>
</mapper>